{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","start","show","isReversed","reverse","sortBy","setSortBy","visibleGoods","sort","a","b","localeCompare","length","className","classNames","map","good","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"0OAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2FaC,EAxFO,WACpB,MAAsBC,oBAAS,GAA/B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAOMC,EAAY,UAAOT,GAmBzB,OAjBIO,GACFE,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,IAAK,QACH,OAAOI,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKXT,GACFI,EAAaH,UAIb,qBAAKS,UAAWC,IAAW,MAAO,CAChC,eAAgBb,EAChB,aAAcA,IAFhB,SAKIA,EAWE,qCACE,oBAAIY,UAAU,aAAd,SACGN,EAAaQ,KAAI,SAAAC,GAAI,OACpB,oBAAIH,UAAU,mBAAd,SAAkCG,SAGtC,sBAAKH,UAAU,UAAf,UACE,wBACEI,KAAK,SACLC,QAAS,kBAAMd,GAASD,IACxBU,UAAU,SAHZ,qBAOA,wBACEI,KAAK,SACLC,QAAS,kBAAMZ,EAAU,UACzBO,UAAU,SAHZ,iCAOA,wBACEI,KAAK,SACLC,QAAS,kBAAMZ,EAAU,WACzBO,UAAU,SAHZ,4BAOA,wBACEI,KAAK,SACLC,QAvEA,WACZd,GAAQ,GACRE,EAAU,KAsEEO,UAAU,SAHZ,yBArCJ,wBACEI,KAAK,SACLC,QAAS,kBAAMhB,GAAK,IACpBW,UAAU,uBAHZ,sBCnDVM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.185c3511.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [start, show] = useState(false);\n  const [isReversed, reverse] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n\n  const reset = () => {\n    reverse(false);\n    setSortBy('');\n  };\n\n  const visibleGoods = [...goodsFromServer];\n\n  if (sortBy) {\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'alpha':\n          return a.localeCompare(b);\n        case 'length':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className={classNames('App', {\n      'App--before': !start,\n      'App--after': start,\n    })}\n    >\n      {!start\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => show(true)}\n            className=\"button button--start\"\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <ul className=\"goods-list\">\n              {visibleGoods.map(good => (\n                <li className=\"goods-list__item\">{good}</li>\n              ))}\n            </ul>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={() => reverse(!isReversed)}\n                className=\"button\"\n              >\n                reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setSortBy('alpha')}\n                className=\"button\"\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setSortBy('length')}\n                className=\"button\"\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={reset}\n                className=\"button\"\n              >\n                Reset\n              </button>\n            </div>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}